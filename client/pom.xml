<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.djw.app</groupId>
	<artifactId>spring-angular4-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-angular4-client</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>../server/src/main/resources/static</directory>
							<includes>
								<include>**/*.*</include>							 
							</includes>							 
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			
			<!-- Plugin to execute command: use default node install location: Create 
				symbolic link to workaround the mvn frontend-maven-plugin, which lookup node/node.exe 
				instead of nodejs/node.exe C:\MyProgs\nodejs\node.exe 
				  1. C:\MyProgs>mklink /D node nodejs 
				  2. set NODE_PATH=C:\MyProgs\ 
				  3. Reconfig .angular-cli.json  : form: "outDir": "dist" to: "outDir": "../server/src/main/resources/static" 
				  4. mvn clean package 
				     the angularjs output will be generated under /server/src/main/resources/static -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<installDirectory>${NODE_PATH}</installDirectory>
					<workingDirectory>.</workingDirectory>
				</configuration>
				<executions>
					<!-- It will execute command "npm build" inside "/angular" directory 
						to clean and create "/dist" directory -->
					<execution>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build -prod</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>	